name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup GCP CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

  clone:
    runs-on: ubuntu-latest
    steps:
      - name: Decode and Authenticate with GCP
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY_BASE64 }}" | base64 --decode > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set core/project ${{ secrets.GCP_PROJECT_ID }}
        
      - name: SSH into GCP instance and handle repository
        run: |
          gcloud compute ssh ${{ secrets.GCP_VM_NAME }} --zone us-central1-a --command "
            # Check if the directory exists
            if [ -d /opt/test-git-clone/Store-Management-System ]; then
              echo 'Repository already exists. Removing and cloning again...'
              sudo rm -rf /opt/test-git-clone/Store-Management-System
            fi
            # Clone the repository
            sudo git clone https://github.com/danWinga/Store-Management-System.git /opt/test-git-clone/Store-Management-System
          "
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          GCP_INSTANCE_NAME: ${{ secrets.GCP_VM_NAME }}

  log:
    runs-on: ubuntu-latest
    steps:
      - name: Decode and Authenticate with GCP
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY_BASE64 }}" | base64 --decode > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Log completion activity
        run: |
          gcloud compute ssh ${{ secrets.GCP_VM_NAME }} --zone us-central1-a --command "
            sudo  echo 'Clone completed ' >> /opt/test-git-clone/clone_log.txt
          "
